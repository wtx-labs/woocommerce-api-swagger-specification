swagger: "2.0"
info:
  description: "The REST API is a powerful part of WooCommerce which lets you read and write various parts of WooCommerce data such as orders, products, coupons, customers, and shipping zones."
  version: "v3"
  title: "WooCommerce REST API"
host: "example-woocommerce-shop.com"
basePath: "/wp-json/wc/v3"
tags:
  - name: "Customers"
  - name: "Products"
  - name: "Orders"
  - name: "Reports"
schemes:
- "https"
security:
  - basicAuth: []
paths:
  /customers:
    get:
      tags:
      - "Customers"
      summary: "This API helps you to view all the customers."
      operationId: "listAllCustomers"
      produces:
      - "application/json"
      parameters:
      - name: "context"
        in: "query"
        description: "Scope under which the request is made; determines fields present in response."
        required: false
        type: "string"
        enum:
          - "view"
          - "edit"
      - name: "page"
        in: "query"
        description: "Current page of the collection."
        required: false
        type: "integer"
        default: 1
      - name: "per_page"
        in: "query"
        description: "Maximum number of items to be returned in result set."
        required: false
        type: "integer"
        default: 10
      - name: "search"
        in: "query"
        description: "Limit results to those matching a string."
        required: false
        type: "string"
      - name: "exclude"
        in: "query"
        description: "Ensure result set excludes specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "include"
        in: "query"
        description: "Limit result set to specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "offset"
        in: "query"
        description: "Offset the result set by a specific number of items."
        required: false
        type: "integer"
      - name: "order"
        in: "query"
        description: "Order sort attribute ascending or descending (asc as default)."
        required: false
        type: "string"
        enum:
          - "asc"
          - "desc"
      - name: "orderby"
        in: "query"
        description: "Sort collection by object attribute."
        required: false
        type: "string"
        enum:
          - "id"
          - "include"
          - "name"
          - "registered_date"
          - "email"
      - name: "email"
        in: "query"
        description: "Limit result set to resources with a specific email address."
        required: false
        type: "string"
      - name: "role"
        in: "query"
        description: "Limit result set to resources with a specific role."
        required: false
        type: "string"
      responses:
        "200":
          description: "Returns list of customers."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /customers/{customerId}:
    get:
      tags:
      - "Customers"
      summary: "This API lets you retrieve and view a specific customer by ID."
      operationId: "retrieveCustomerById"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to return"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Returns specified customer."
          schema:
            $ref: "#/definitions/Customer"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /products:
    get:
      tags:
      - "Products"
      summary: "This API helps you to view all the products."
      operationId: "listAllProducts"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "query"
        description: "Limit result set to products with a specific SKU."
        required: false
        type: "string"
      - name: "attribute"
        in: "query"
        description: "Limit result set to products with a specific attribute."
        required: false
        type: "string"
      - name: "per_page"
        in: "query"
        description: "Maximum number of items to be returned in result set. Default is 10."
        required: false
        type: "integer"
      - name: "page"
        in: "query"
        description: "Current page of the collection. Default is 1."
        required: false
        type: "integer"
      - name: "after"
        in: "query"
        description: "Limit response to resources published after a given ISO8601 compliant date (eg. 2023-05-07T10:00:00)."
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "Limit response to resources published before a given ISO8601 compliant date (eg. 2023-10-07T12:10:16)."
        required: false
        type: "string"
      - name: "modified_after"
        in: "query"
        description: "Limit response to resources modified after a given ISO8601 compliant date. (eg. 2023-05-07T10:00:00)."
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "Limit result set to products assigned a specific status. Options: any, draft, pending, private and publish. Default is any."
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "any"
          - "draft"
          - "pending"
          - "private"
          - "publish"
          default: "any"
        collectionFormat: "multi"
      - name: "stock_status"
        in: "query"
        description: "Limit result set to products with specified stock status. Options: instock, outofstock and onbackorder."
        required: false
        type: "string"
        enum:
        - "instock"
        - "outofstock"
        - "onbackorder"
      - name: "order"
        in: "query"
        description: "Order sort attribute ascending or descending. Options: asc and desc. Default is desc."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        default: "desc"
      responses:
        "200":
          description: "Returns list of products."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /products/{productId}:
    get:
      tags:
      - "Products"
      summary: "This API lets you retrieve and view a specific product by ID."
      operationId: "retrieveProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Returns specified product."
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
    put:
      tags:
      - "Products"
      summary: "This API lets you make changes to a product."
      operationId: "updateProductById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to update"
        required: true
        type: "integer"
      - in: "body"
        name: "product"
        description: "Product object with data to update."
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          description: "Returns updated product."
          schema:
            $ref: "#/definitions/Product"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /orders:
    get:
      tags:
      - "Orders"
      summary: "This API helps you to view all the orders."
      operationId: "listAllOrders"
      produces:
      - "application/json"
      parameters:
      - name: "page"
        in: "query"
        description: "Current page of the collection. Default is 1."
        required: false
        type: "integer"
      - name: "per_page"
        in: "query"
        description: "Maximum number of items to be returned in result set. Default is 10."
        required: false
        type: "integer"
      - name: "after"
        in: "query"
        description: "Limit response to resources published after a given ISO8601 compliant date (eg. 2023-05-07T10:00:00)."
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "Limit response to resources published before a given ISO8601 compliant date (eg. 2023-10-07T12:10:16)."
        required: false
        type: "string"
      - name: "modified_after"
        in: "query"
        description: "Limit response to resources modified after a given ISO8601 compliant date. (eg. 2023-05-07T10:00:00)."
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "Limit result set to orders assigned a specific status. Options: any, pending, processing, on-hold, completed, cancelled, refunded, failed and trash. Default is any."
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "any"
          - "pending"
          - "processing"
          - "on-hold"
          - "completed"
          - "cancelled"
          - "refunded"
          - "failed"
          - "trash"
          default: "any"
        collectionFormat: "multi"
      - name: "order"
        in: "query"
        description: "Order sort attribute ascending or descending. Options: asc and desc. Default is desc."
        required: false
        type: "string"
        enum:
        - "asc"
        - "desc"
        default: "desc"
      responses:
        "200":
          description: "Returns list of orders."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /orders/{orderId}:
    get:
      tags:
      - "Orders"
      summary: "This API lets you retrieve and view a specific order."
      operationId: "retrieveOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order to return"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Returns specified order."
          schema:
            $ref: "#/definitions/Order"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /reports/orders/totals:
    get:
      tags:
      - "Reports"
      summary: "This API lets you retrieve and view orders totals report."
      operationId: "reportOrderTotalsSummary"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Returns list of products."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ReportOrderTotalSummary"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
  /reports/sales:
    get:
      tags:
      - "Reports"
      summary: "This API lets you retrieve and view a sales report."
      operationId: "reportSalesSummary"
      produces:
      - "application/json"
      parameters:
      - name: "period"
        in: "query"
        description: "Report period. Default is today's date. Options: week, month, last_month and year"
        required: false
        type: "string"
        enum:
        - "week"
        - "month"
        - "last_month"
        - "year"
      - name: "date_min"
        in: "query"
        description: "Return sales for a specific start date, the date need to be in the YYYY-MM-DD format."
        required: false
        type: "string"
      - name: "date_max"
        in: "query"
        description: "Return sales for a specific end date, the date need to be in the YYYY-MM-DD format."
        required: false
        type: "string"
      responses:
        "200":
          description: "Returns list of products."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ReportSalesSummary"
        "400":
          description: "Bad Request"
          schema:
            $ref: "#/definitions/ApiError"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"  
securityDefinitions:
  basicAuth:
    type: basic
definitions:
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the resource. read-only"
      date_created:
        type: "string"
        format: "date-time"
        description: "The date the customer was created, in the site's timezone. read-only"
      date_created_gmt:
        type: "string"
        format: "date-time"
        description: "The date the customer was created, as GMT. read-only"
      date_modified:
        type: "string"
        format: "date-time"
        description: "The date the customer was last modified, in the site's timezone. read-only"
      date_modified_gmt:
        type: "string"
        format: "date-time"
        description: "The date the customer was last modified, as GMT. read-only"
      email:
        type: "string"
        description: "The email address for the customer. mandatory"
      first_name:
        type: "string"
        description: "Customer first name."
      last_name:
        type: "string"
        description: "Customer last name."
      role:
        type: "string"
        description: "Customer role. read-only"
      username:
        type: "string"
        description: "Customer login name."
      password:
        type: "string"
        description: "Customer password. write-only"
      billing:
        $ref: "#/definitions/Billing"
      shipping:
        $ref: "#/definitions/Shipping"
      is_paying_customer:
        type: "boolean"
        description: "Is the customer a paying customer? read-only"
      avatar_url:
        type: "string"
        description: "Avatar URL. read-only"
      meta_data:
        type: "array"
        description: "Meta data."
        items:
          $ref: "#/definitions/MetaData"
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the resource."
      date_created:
        type: "string"
        format: "date-time"
        description: "The date the product was created, in the site's timezone."
      date_modified:
        type: "string"
        format: "date-time"
        description: "The date the product was last modified, in the site's timezone."
      name:
        type: "string"
        description: "Product name."
      sku:
        type: "string"
        description: "Unique identifier."
      type:
        type: "string"
        description: "Product type. Options: simple, grouped, external and variable. Default is simple."
      status:
        type: "string"
        description: "Product status (post status). Options: draft, pending, private and publish. Default is publish."
      description:
        type: "string"
        description: "Product description."
      short_description:
        type: "string"
        description: "Product short description."
      price:
        type: "string"
        description: "Current product price."
      stock_quantity:
        type: "integer"
        description: "Stock quantity."
      stock_status:
        type: "string"
        description: "Controls the stock status of the product. Options: instock, outofstock, onbackorder. Default is instock."
      parent_id:
        type: "integer"
        description: "Product parent ID."
      variations:
        type: "array"
        items:
          type: "integer"
        description: "List of variations IDs."
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/ProductAttribute"
        description: "List of attributes."
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
        description: "Meta data properties."
  ProductAttribute:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Attribute ID."
      name:
        type: "string"
        description: "Attribute name."
      option:
        type: "string"
        description: "Selected attribute term name. Applicable only for Product represents SKU (variation)"
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the resource."
      number:
        type: "string"
        description: "Order number."
      status:
        type: "string"
        description: "Order status. Options: pending, processing, on-hold, completed, cancelled, refunded, failed and trash. Default is pending."
      date_created:
        type: "string"
        format: "date-time"
        description: "The date the order was created, in the site's timezone."
      date_modified:
        type: "string"
        format: "date-time"
        description: "The date the order was last modified, in the site's timezone."
      date_paid:
        type: "string"
        format: "date-time"
        description: "The date the order was paid, in the site's timezone."
      date_completed:
        type: "string"
        format: "date-time"
        description: "The date the order was completed, in the site's timezone."
      total:
        type: "string"
        description: "Grand total (purchased products and shipping price)."
      shipping_total:
        type: "string"
        description: "Total shipping amount for the order."
      payment_method_title:
        type: "string"
        description: "Payment method title."
      customer_id:
        type: "integer"
        description: "User ID who owns the order. 0 for guests. Default is 0."
      customer_note:
        type: "string"
        description: "Note left by customer during checkout."
      billing:
        $ref: "#/definitions/Billing"
      shipping:
        $ref: "#/definitions/Shipping"
      line_items:
        type: "array"
        items:
          $ref: "#/definitions/OrderLineItem"
        description: "Line items data."
  Billing:
    type: "object"
    properties:
      first_name:
        type: "string"
        description: "First name."
      last_name:
        type: "string"
        description: "Last name."
      company:
        type: "string"
        description: "Company name."
      address_1:
        type: "string"
        description: "Address line 1"
      address_2:
        type: "string"
        description: "Address line 2"
      city:
        type: "string"
        description: "City name."
      state:
        type: "string"
        description: "ISO code or name of the state, province or district."
      postcode:
        type: "string"
        description: "Postal code."
      country:
        type: "string"
        description: "Country code in ISO 3166-1 alpha-2 format."
      email:
        type: "string"
        description: "Email address."
      phone:
        type: "string"
        description: "Phone number."
  Shipping:
    type: "object"
    properties:
      first_name:
        type: "string"
        description: "First name."
      last_name:
        type: "string"
        description: "Last name."
      company:
        type: "string"
        description: "Company name."
      address_1:
        type: "string"
        description: "Address line 1"
      address_2:
        type: "string"
        description: "Address line 2"
      city:
        type: "string"
        description: "City name."
      state:
        type: "string"
        description: "ISO code or name of the state, province or district."
      postcode:
        type: "string"
        description: "Postal code."
      country:
        type: "string"
        description: "ISO code of the country."
  OrderLineItem:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Item ID."
      name:
        type: "string"
        description: "Product name."
      product_id:
        type: "integer"
        description: "Product ID."
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
        description: "Meta data properties."
      sku:
        type: "string"
        description: "Product SKU."
      variation_id:
        type: "integer"
        description: "Variation ID, if applicable."
      quantity:
        type: "integer"
        description: "Quantity ordered."
      total:
        type: "string"
        description: "Line total (after discounts)."
      price:
        type: "number"
        format: "double"
        description: "Product price."
      parent_name:
        type: "string"
        description: "Parent product name."
  MetaData:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Meta ID."
      key:
        type: "string"
        description: "Meta key."
      value:
        type: "object"
        description: "Meta value."
  ReportOrderTotalSummary:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "An alphanumeric identifier for the resource."
      name:
        type: "string"
        description: "Orders status name."
      total:
        type: "integer"
        description: "Amount of orders."
  ReportSalesSummary:
    type: "object"
    properties:
      total_sales:
        type: "string"
      net_sales:
        type: "string"
      average_sales:
        type: "string"
      total_orders:
        type: "integer"
      total_items:
        type: "integer"
      total_tax:
        type: "string"
      total_shipping:
        type: "string"
      total_refunds:
        type: "integer"
      total_discount:
        type: "string"
      totals_grouped_by:
        type: "string"
      total_customers:
        type: "integer"
      totals:
        type: "object"
        additionalProperties:
          $ref: "#/definitions/ReportSalesSummaryItem"
  ReportSalesSummaryItem:
    type: "object"
    properties:
      sales:
        type: "string"
      orders:
        type: "integer"
      items:
        type: "integer"
      tax:
        type: "string"
      shipping:
        type: "string"
      discount:
        type: "string"
      customers:
        type: "integer"
  ApiError:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
      data:
        type: "object"
        properties:
          status:
            type: "integer"
