# specVersion: 0.1.5-alpha-20250412
swagger: "2.0"
info:
  description: "The REST API is a powerful part of WooCommerce which lets you read and write various parts of WooCommerce data such as orders, products, coupons, customers, and shipping zones."
  version: "v3"
  title: "WooCommerce REST API"
  contact:
    name: "WTX Labs Team"
    url: "https://github.com/wtx-labs/woocommerce-api-swagger-specification"
host: "example-woocommerce-shop.com"
basePath: "/wp-json/wc/v3"
tags:
  - name: "Customers"
  - name: "Products"
  - name: "Product variations"
  - name: "Orders"
  - name: "Reports"
schemes:
- "https"
security:
  - basicAuth: []
paths:
  /customers:
    post:
      tags:
      - "Customers"
      summary: "This API helps you to create a new customer."
      operationId: "createCustomer"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "customer"
        description: "Customer object with data to create."
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "200":
          description: "Returns specified customer."
          schema:
            $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    get:
      tags:
      - "Customers"
      summary: "This API helps you to view all the customers."
      operationId: "listAllCustomers"
      produces:
      - "application/json"
      parameters:
      - name: "context"
        in: "query"
        description: "Scope under which the request is made; determines fields present in response."
        required: false
        type: "string"
        enum:
          - "view"
          - "edit"
      - name: "page"
        in: "query"
        description: "Current page of the collection."
        required: false
        type: "integer"
        default: 1
      - name: "per_page"
        in: "query"
        description: "Maximum number of items to be returned in result set."
        required: false
        type: "integer"
        default: 10
      - name: "search"
        in: "query"
        description: "Limit results to those matching a string."
        required: false
        type: "string"
      - name: "exclude"
        in: "query"
        description: "Ensure result set excludes specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "include"
        in: "query"
        description: "Limit result set to specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "offset"
        in: "query"
        description: "Offset the result set by a specific number of items."
        required: false
        type: "integer"
      - name: "order"
        in: "query"
        description: "Order sort attribute ascending or descending (asc as default)."
        required: false
        type: "string"
        enum:
          - "asc"
          - "desc"
      - name: "orderby"
        in: "query"
        description: "Sort collection by object attribute."
        required: false
        type: "string"
        enum:
          - "id"
          - "include"
          - "name"
          - "registered_date"
          - "email"
      - name: "email"
        in: "query"
        description: "Limit result set to resources with a specific email address."
        required: false
        type: "string"
      - name: "role"
        in: "query"
        description: "Limit result set to resources with a specific role. Default is customer."
        required: false
        type: "string"
        enum:
          - "all"
          - "administrator"
          - "editor"
          - "author"
          - "contributor"
          - "subscriber"
          - "customer"
          - "shop_manager"
      responses:
        "200":
          description: "Returns list of customers."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /customers/{customerId}:
    get:
      tags:
      - "Customers"
      summary: "This API lets you retrieve and view a specific customer by ID."
      operationId: "retrieveCustomerById"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to return"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Returns specified customer."
          schema:
            $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    put:
      tags:
      - "Customers"
      summary: "This API lets you make changes to a customer."
      operationId: "updateCustomerById"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to update"
        required: true
        type: "integer"
      - in: "body"
        name: "customer"
        description: "Customer object with data to update."
        required: true
        schema:
          $ref: "#/definitions/Customer"
      responses:
        "200":
          description: "Returns updated customer."
          schema:
            $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    delete:
      tags:
      - "Customers"
      summary: "This API helps you delete a customer."
      operationId: "deleteCustomerById"
      produces:
      - "application/json"
      parameters:
      - name: "customerId"
        in: "path"
        description: "ID of customer to delete"
        required: true
        type: "integer"
      - name: "force"
        in: "query"
        description: "Required to be true, as resource does not support trashing."
        required: true
        type: "string"
      - name: "reassign"
        in: "query"
        description: "User ID to reassign posts to."
        required: false
        type: "integer"
      responses:
        "200":
          description: "Returns deleted customer."
          schema:
            $ref: "#/definitions/Customer"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /products:
    post:
      tags:
      - "Products"
      summary: "This API helps you to create a new product."
      operationId: "createProduct"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "product"
        description: "Product object with data to create."
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          description: "Returns created product."
          schema:
            $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    get:
      tags:
      - "Products"
      summary: "This API helps you to view all the products."
      operationId: "listAllProducts"
      produces:
      - "application/json"
      parameters:
      - name: "context"
        in: "query"
        description: "Scope under which the request is made; determines fields present in response."
        required: false
        type: "string"
        enum:
          - "view"
          - "edit"
      - name: "page"
        in: "query"
        description: "Current page of the collection."
        required: false
        type: "integer"
        default: 1
      - name: "per_page"
        in: "query"
        description: "Maximum number of items to be returned in result set."
        required: false
        type: "integer"
        default: 10
      - name: "search"
        in: "query"
        description: "Limit results to those matching a string."
        required: false
        type: "string"
      - name: "after"
        in: "query"
        description: "Limit response to resources published after a given ISO8601 compliant date."
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "Limit response to resources published before a given ISO8601 compliant date."
        required: false
        type: "string"
      - name: "exclude"
        in: "query"
        description: "Ensure result set excludes specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "include"
        in: "query"
        description: "Limit result set to specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "offset"
        in: "query"
        description: "Offset the result set by a specific number of items."
        required: false
        type: "integer"
      - name: "order"
        in: "query"
        description: "Order sort attribute ascending or descending."
        required: false
        type: "string"
        enum:
          - "asc"
          - "desc"
      - name: "orderby"
        in: "query"
        description: "Sort collection by object attribute."
        required: false
        type: "string"
        enum:
          - "date"
          - "id"
          - "include"
          - "title"
          - "slug"
      - name: "parent"
        in: "query"
        description: "Limit result set to those of particular parent IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "parent_exclude"
        in: "query"
        description: "Limit result set to all items except those of a particular parent ID."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "status"
        in: "query"
        description: "Limit result set to products assigned a specific status."
        required: false
        type: "string"
        enum:
          - "any"
          - "draft"
          - "pending"
          - "private"
          - "publish"
      - name: "type"
        in: "query"
        description: "Limit result set to products assigned a specific type."
        required: false
        type: "string"
        enum:
          - "simple"
          - "grouped"
          - "external"
          - "variable"
      - name: "sku"
        in: "query"
        description: "Limit result set to products with a specific SKU."
        required: false
        type: "string"
      - name: "featured"
        in: "query"
        description: "Limit result set to featured products."
        required: false
        type: "boolean"
      - name: "category"
        in: "query"
        description: "Limit result set to products assigned a specific category ID."
        required: false
        type: "string"
      - name: "tag"
        in: "query"
        description: "Limit result set to products assigned a specific tag ID."
        required: false
        type: "string"
      - name: "shipping_class"
        in: "query"
        description: "Limit result set to products assigned a specific shipping class ID."
        required: false
        type: "string"
      - name: "attribute"
        in: "query"
        description: "Limit result set to products with a specific attribute."
        required: false
        type: "string"
      - name: "attribute_term"
        in: "query"
        description: "Limit result set to products with a specific attribute term ID (required an assigned attribute)."
        required: false
        type: "string"
      - name: "tax_class"
        in: "query"
        description: "Limit result set to products with a specific tax class."
        required: false
        type: "string"
      - name: "on_sale"
        in: "query"
        description: "Limit result set to products on sale."
        required: false
        type: "boolean"
      - name: "min_price"
        in: "query"
        description: "Limit result set to products based on a minimum price."
        required: false
        type: "string"
      - name: "max_price"
        in: "query"
        description: "Limit result set to products based on a maximum price."
        required: false
        type: "string"
      - name: "stock_status"
        in: "query"
        description: "Limit result set to products with specified stock status."
        required: false
        type: "string"
        enum:
          - "instock"
          - "outofstock"
          - "onbackorder"
      responses:
        "200":
          description: "Returns list of products."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /products/{productId}:
    get:
      tags:
      - "Products"
      summary: "This API lets you retrieve and view a specific product by ID."
      operationId: "retrieveProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to return"
        required: true
        type: "integer"
      responses:
        "200":
          description: "Returns specified product."
          schema:
            $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    put:
      tags:
      - "Products"
      summary: "This API lets you make changes to a product."
      operationId: "updateProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to update"
        required: true
        type: "integer"
      - in: "body"
        name: "product"
        description: "Product object with data to update."
        required: true
        schema:
          $ref: "#/definitions/Product"
      responses:
        "200":
          description: "Returns updated product."
          schema:
            $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    delete:
      tags:
      - "Products"
      summary: "This API helps you delete a product."
      operationId: "deleteProductById"
      produces:
      - "application/json"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of product to delete"
        required: true
        type: "integer"
      - name: "force"
        in: "query"
        description: "Required to be true, as resource does not support trashing."
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns deleted product."
          schema:
            $ref: "#/definitions/Product"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /orders:
    post:
      tags:
      - "Orders"
      summary: "This API helps you to create a new order."
      operationId: "createOrder"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "order"
        description: "Order object with data to create."
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "Returns created order."
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    get:
      tags:
      - "Orders"
      summary: "This API helps you to view all the orders."
      operationId: "listAllOrders"
      produces:
      - "application/json"
      parameters:
      - name: "context"
        in: "query"
        description: "Scope under which the request is made; determines fields present in response."
        required: false
        type: "string"
        enum:
          - "view"
          - "edit"
      - name: "page"
        in: "query"
        description: "Current page of the collection."
        required: false
        type: "integer"
        default: 1
      - name: "per_page"
        in: "query"
        description: "Maximum number of items to be returned in result set."
        required: false
        type: "integer"
        default: 10
      - name: "search"
        in: "query"
        description: "Limit results to those matching a string."
        required: false
        type: "string"
      - name: "after"
        in: "query"
        description: "Limit response to resources published after a given ISO8601 compliant date."
        required: false
        type: "string"
      - name: "before"
        in: "query"
        description: "Limit response to resources published before a given ISO8601 compliant date."
        required: false
        type: "string"
      - name: "exclude"
        in: "query"
        description: "Ensure result set excludes specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "include"
        in: "query"
        description: "Limit result set to specific IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "offset"
        in: "query"
        description: "Offset the result set by a specific number of items."
        required: false
        type: "integer"
      - name: "order"
        in: "query"
        description: "Order sort attribute ascending or descending."
        required: false
        type: "string"
        enum:
          - "asc"
          - "desc"
      - name: "orderby"
        in: "query"
        description: "Sort collection by object attribute."
        required: false
        type: "string"
        enum:
          - "date"
          - "id"
          - "include"
          - "title"
          - "slug"
      - name: "parent"
        in: "query"
        description: "Limit result set to those of particular parent IDs."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "parent_exclude"
        in: "query"
        description: "Limit result set to all items except those of a particular parent ID."
        required: false
        type: "array"
        items:
          type: "integer"
        collectionFormat: "csv"
      - name: "status"
        in: "query"
        description: "Limit result set to orders assigned a specific status."
        required: false
        type: "string"
        enum:
          - "any"
          - "pending"
          - "processing"
          - "on-hold"
          - "completed"
          - "cancelled"
          - "refunded"
          - "failed"
      - name: "customer"
        in: "query"
        description: "Limit result set to orders assigned a specific customer."
        required: false
        type: "integer"
      - name: "product"
        in: "query"
        description: "Limit result set to orders assigned a specific product."
        required: false
        type: "integer"
      - name: "dp"
        in: "query"
        description: "Number of decimal points to use in each resource."
        required: false
        type: "integer"
        default: 2
      responses:
        "200":
          description: "Returns list of orders."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /orders/{orderId}:
    get:
      tags:
      - "Orders"
      summary: "This API lets you retrieve and view a specific order by ID."
      operationId: "retrieveOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order to return"
        required: true
        type: "integer"
      - name: "dp"
        in: "query"
        description: "Number of decimal points to use in each resource."
        required: false
        type: "integer"
        default: 2
      responses:
        "200":
          description: "Returns specified order."
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    put:
      tags:
      - "Orders"
      summary: "This API lets you make changes to an order."
      operationId: "updateOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order to update"
        required: true
        type: "integer"
      - in: "body"
        name: "order"
        description: "Order object with data to update."
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        "200":
          description: "Returns updated order."
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
    delete:
      tags:
      - "Orders"
      summary: "This API helps you delete an order."
      operationId: "deleteOrderById"
      produces:
      - "application/json"
      parameters:
      - name: "orderId"
        in: "path"
        description: "ID of order to delete"
        required: true
        type: "integer"
      - name: "force"
        in: "query"
        description: "Required to be true, as resource does not support trashing."
        required: true
        type: "string"
      responses:
        "200":
          description: "Returns deleted order."
          schema:
            $ref: "#/definitions/Order"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /reports:
    get:
      tags:
      - "Reports"
      summary: "This API helps you to view all the reports."
      operationId: "listAllReports"
      produces:
      - "application/json"
      responses:
        "200":
          description: "Returns list of reports."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Report"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
  /reports/sales:
    get:
      tags:
      - "Reports"
      summary: "This API helps you to view sales report."
      operationId: "getSalesReport"
      produces:
      - "application/json"
      parameters:
      - name: "period"
        in: "query"
        description: "Report period."
        required: false
        type: "string"
        enum:
          - "day"
          - "week"
          - "month"
          - "last_month"
          - "year"
      - name: "date_min"
        in: "query"
        description: "Start date of report."
        required: false
        type: "string"
      - name: "date_max"
        in: "query"
        description: "End date of report."
        required: false
        type: "string"
      responses:
        "200":
          description: "Returns sales report."
          schema:
            $ref: "#/definitions/SalesReport"
        "401":
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/ApiError"
        "404":
          description: "Not Found"
          schema:
            $ref: "#/definitions/ApiError"
securityDefinitions:
  basicAuth:
    type: basic
definitions:
  Customer:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the resource."
      email:
        type: "string"
        description: "The email address for the customer."
      first_name:
        type: "string"
        description: "Customer first name."
      last_name:
        type: "string"
        description: "Customer last name."
      role:
        type: "string"
        description: "Customer role."
      username:
        type: "string"
        description: "Customer login name."
      billing:
        $ref: "#/definitions/Billing"
      shipping:
        $ref: "#/definitions/Shipping"
      is_paying_customer:
        type: "boolean"
        description: "Is the customer a paying customer?"
      orders_count:
        type: "integer"
        description: "Quantity of orders made by the customer."
      total_spent:
        type: "string"
        description: "Total amount spent."
      avatar_url:
        type: "string"
        description: "Avatar URL."
  Product:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the resource."
      name:
        type: "string"
        description: "Product name."
      slug:
        type: "string"
        description: "Product slug."
      permalink:
        type: "string"
        description: "Product URL."
      date_created:
        type: "string"
        format: "date-time"
        description: "The date the product was created, in the site's timezone."
      date_created_gmt:
        type: "string"
        format: "date-time"
        description: "The date the product was created, as GMT."
      date_modified:
        type: "string"
        format: "date-time"
        description: "The date the product was last modified, in the site's timezone."
      date_modified_gmt:
        type: "string"
        format: "date-time"
        description: "The date the product was last modified, as GMT."
      type:
        type: "string"
        description: "Product type."
        enum:
          - "simple"
          - "grouped"
          - "external"
          - "variable"
      status:
        type: "string"
        description: "Product status (post status)."
        enum:
          - "draft"
          - "pending"
          - "private"
          - "publish"
      featured:
        type: "boolean"
        description: "Featured product."
      catalog_visibility:
        type: "string"
        description: "Catalog visibility."
        enum:
          - "visible"
          - "catalog"
          - "search"
          - "hidden"
      description:
        type: "string"
        description: "Product description."
      short_description:
        type: "string"
        description: "Product short description."
      sku:
        type: "string"
        description: "Unique identifier."
      price:
        type: "string"
        description: "Current product price."
      regular_price:
        type: "string"
        description: "Product regular price."
      sale_price:
        type: "string"
        description: "Product sale price."
      date_on_sale_from:
        type: "string"
        format: "date-time"
        description: "Start date of sale price."
      date_on_sale_from_gmt:
        type: "string"
        format: "date-time"
        description: "Start date of sale price, as GMT."
      date_on_sale_to:
        type: "string"
        format: "date-time"
        description: "End date of sale price."
      date_on_sale_to_gmt:
        type: "string"
        format: "date-time"
        description: "End date of sale price, as GMT."
      price_html:
        type: "string"
        description: "Price formatted in HTML."
      on_sale:
        type: "boolean"
        description: "Shows if the product is on sale."
      purchasable:
        type: "boolean"
        description: "Shows if the product can be bought."
      total_sales:
        type: "integer"
        description: "Amount of sales."
      virtual:
        type: "boolean"
        description: "If the product is virtual."
      downloadable:
        type: "boolean"
        description: "If the product is downloadable."
      downloads:
        type: "array"
        items:
          $ref: "#/definitions/Download"
      download_limit:
        type: "integer"
        description: "Number of times downloadable files can be downloaded after purchase."
      download_expiry:
        type: "integer"
        description: "Number of days until access to downloadable files expires."
      external_url:
        type: "string"
        description: "Product external URL. Only for external products."
      button_text:
        type: "string"
        description: "Product external button text. Only for external products."
      tax_status:
        type: "string"
        description: "Tax status."
        enum:
          - "taxable"
          - "shipping"
          - "none"
      tax_class:
        type: "string"
        description: "Tax class."
      manage_stock:
        type: "boolean"
        description: "Stock management at product level."
      stock_quantity:
        type: "integer"
        description: "Stock quantity."
      stock_status:
        type: "string"
        description: "Controls the stock status of the product."
        enum:
          - "instock"
          - "outofstock"
          - "onbackorder"
      backorders:
        type: "string"
        description: "If managing stock, this controls if backorders are allowed."
        enum:
          - "no"
          - "notify"
          - "yes"
      backorders_allowed:
        type: "boolean"
        description: "Shows if backorders are allowed."
      backordered:
        type: "boolean"
        description: "Shows if the product is on backordered."
      sold_individually:
        type: "boolean"
        description: "Allow one item to be bought in a single order."
      weight:
        type: "string"
        description: "Product weight."
      dimensions:
        $ref: "#/definitions/Dimensions"
      shipping_required:
        type: "boolean"
        description: "Shows if the product need to be shipped."
      shipping_taxable:
        type: "boolean"
        description: "Shows whether or not the product shipping is taxable."
      shipping_class:
        type: "string"
        description: "Shipping class slug."
      shipping_class_id:
        type: "integer"
        description: "Shipping class ID."
      reviews_allowed:
        type: "boolean"
        description: "Allow reviews."
      average_rating:
        type: "string"
        description: "Reviews average rating."
      rating_count:
        type: "integer"
        description: "Amount of reviews that the product has."
      related_ids:
        type: "array"
        items:
          type: "integer"
        description: "List of related products IDs."
      upsell_ids:
        type: "array"
        items:
          type: "integer"
        description: "List of up-sell products IDs."
      cross_sell_ids:
        type: "array"
        items:
          type: "integer"
        description: "List of cross-sell products IDs."
      parent_id:
        type: "integer"
        description: "Product parent ID."
      purchase_note:
        type: "string"
        description: "Optional note to send the customer after purchase."
      categories:
        type: "array"
        items:
          $ref: "#/definitions/Category"
      tags:
        type: "array"
        items:
          $ref: "#/definitions/Tag"
      images:
        type: "array"
        items:
          $ref: "#/definitions/Image"
      attributes:
        type: "array"
        items:
          $ref: "#/definitions/Attribute"
      default_attributes:
        type: "array"
        items:
          $ref: "#/definitions/DefaultAttribute"
      variations:
        type: "array"
        items:
          type: "integer"
        description: "List of variations IDs."
      grouped_products:
        type: "array"
        items:
          type: "integer"
        description: "List of grouped products ID."
      menu_order:
        type: "integer"
        description: "Menu order, used to custom sort products."
  Download:
    type: "object"
    properties:
      id:
        type: "string"
        description: "File ID."
      name:
        type: "string"
        description: "File name."
      file:
        type: "string"
        description: "File URL."
  Dimensions:
    type: "object"
    properties:
      length:
        type: "string"
        description: "Product length."
      width:
        type: "string"
        description: "Product width."
      height:
        type: "string"
        description: "Product height."
  Category:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Category ID."
      name:
        type: "string"
        description: "Category name."
      slug:
        type: "string"
        description: "Category slug."
  Tag:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Tag ID."
      name:
        type: "string"
        description: "Tag name."
      slug:
        type: "string"
        description: "Tag slug."
  Image:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Image ID."
      date_created:
        type: "string"
        format: "date-time"
        description: "The date the image was created, in the site's timezone."
      date_created_gmt:
        type: "string"
        format: "date-time"
        description: "The date the image was created, as GMT."
      date_modified:
        type: "string"
        format: "date-time"
        description: "The date the image was last modified, in the site's timezone."
      date_modified_gmt:
        type: "string"
        format: "date-time"
        description: "The date the image was last modified, as GMT."
      src:
        type: "string"
        description: "Image URL."
      name:
        type: "string"
        description: "Image name."
      alt:
        type: "string"
        description: "Image alternative text."
  Attribute:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Attribute ID."
      name:
        type: "string"
        description: "Attribute name."
      position:
        type: "integer"
        description: "Attribute position."
      visible:
        type: "boolean"
        description: "Define if the attribute is visible on the \"Additional information\" tab in the product's page."
      variation:
        type: "boolean"
        description: "Define if the attribute can be used as variation."
      options:
        type: "array"
        items:
          type: "string"
        description: "List of available term names of the attribute."
  DefaultAttribute:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Attribute ID."
      name:
        type: "string"
        description: "Attribute name."
      option:
        type: "string"
        description: "Selected attribute term name."
  Order:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Unique identifier for the resource."
      parent_id:
        type: "integer"
        description: "Parent order ID."
      number:
        type: "string"
        description: "Order number."
      order_key:
        type: "string"
        description: "Order key."
      created_via:
        type: "string"
        description: "Shows where the order was created."
      version:
        type: "string"
        description: "Version of WooCommerce which last updated the order."
      status:
        type: "string"
        description: "Order status."
      currency:
        type: "string"
        description: "Currency the order was created with."
      date_created:
        type: "string"
        format: "date-time"
        description: "The date the order was created, in the site's timezone."
      date_created_gmt:
        type: "string"
        format: "date-time"
        description: "The date the order was created, as GMT."
      date_modified:
        type: "string"
        format: "date-time"
        description: "The date the order was last modified, in the site's timezone."
      date_modified_gmt:
        type: "string"
        format: "date-time"
        description: "The date the order was last modified, as GMT."
      discount_total:
        type: "string"
        description: "Total discount amount for the order."
      discount_tax:
        type: "string"
        description: "Total discount tax amount for the order."
      shipping_total:
        type: "string"
        description: "Total shipping amount for the order."
      shipping_tax:
        type: "string"
        description: "Total shipping tax amount for the order."
      cart_tax:
        type: "string"
        description: "Sum of line item taxes only."
      total:
        type: "string"
        description: "Grand total."
      total_tax:
        type: "string"
        description: "Sum of all taxes."
      prices_include_tax:
        type: "boolean"
        description: "True the prices included tax during checkout."
      customer_id:
        type: "integer"
        description: "User ID who owns the order. 0 for guests."
      customer_ip_address:
        type: "string"
        description: "Customer's IP address."
      customer_user_agent:
        type: "string"
        description: "User agent of the customer."
      customer_note:
        type: "string"
        description: "Note left by customer during checkout."
      billing:
        $ref: "#/definitions/Billing"
      shipping:
        $ref: "#/definitions/Shipping"
      payment_method:
        type: "string"
        description: "Payment method ID."
      payment_method_title:
        type: "string"
        description: "Payment method title."
      transaction_id:
        type: "string"
        description: "Unique transaction ID."
      date_paid:
        type: "string"
        format: "date-time"
        description: "The date the order was paid, in the site's timezone."
      date_paid_gmt:
        type: "string"
        format: "date-time"
        description: "The date the order was paid, as GMT."
      date_completed:
        type: "string"
        format: "date-time"
        description: "The date the order was completed, in the site's timezone."
      date_completed_gmt:
        type: "string"
        format: "date-time"
        description: "The date the order was completed, as GMT."
      cart_hash:
        type: "string"
        description: "MD5 hash of cart items to ensure orders are not modified."
      line_items:
        type: "array"
        items:
          $ref: "#/definitions/LineItem"
      tax_lines:
        type: "array"
        items:
          $ref: "#/definitions/TaxLine"
      shipping_lines:
        type: "array"
        items:
          $ref: "#/definitions/ShippingLine"
      fee_lines:
        type: "array"
        items:
          $ref: "#/definitions/FeeLine"
      coupon_lines:
        type: "array"
        items:
          $ref: "#/definitions/CouponLine"
      refunds:
        type: "array"
        items:
          $ref: "#/definitions/Refund"
  Billing:
    type: "object"
    properties:
      first_name:
        type: "string"
        description: "First name."
      last_name:
        type: "string"
        description: "Last name."
      company:
        type: "string"
        description: "Company name."
      address_1:
        type: "string"
        description: "Address line 1"
      address_2:
        type: "string"
        description: "Address line 2"
      city:
        type: "string"
        description: "City name."
      state:
        type: "string"
        description: "ISO code or name of the state, province or district."
      postcode:
        type: "string"
        description: "Postal code."
      country:
        type: "string"
        description: "ISO code of the country."
      email:
        type: "string"
        description: "Email address."
      phone:
        type: "string"
        description: "Phone number."
  Shipping:
    type: "object"
    properties:
      first_name:
        type: "string"
        description: "First name."
      last_name:
        type: "string"
        description: "Last name."
      company:
        type: "string"
        description: "Company name."
      address_1:
        type: "string"
        description: "Address line 1"
      address_2:
        type: "string"
        description: "Address line 2"
      city:
        type: "string"
        description: "City name."
      state:
        type: "string"
        description: "ISO code or name of the state, province or district."
      postcode:
        type: "string"
        description: "Postal code."
      country:
        type: "string"
        description: "ISO code of the country."
  LineItem:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Item ID."
      name:
        type: "string"
        description: "Product name."
      product_id:
        type: "integer"
        description: "Product ID."
      variation_id:
        type: "integer"
        description: "Variation ID, if applicable."
      quantity:
        type: "integer"
        description: "Quantity ordered."
      tax_class:
        type: "string"
        description: "Tax class of product."
      subtotal:
        type: "string"
        description: "Line subtotal (before discounts)."
      subtotal_tax:
        type: "string"
        description: "Line subtotal tax (before discounts)."
      total:
        type: "string"
        description: "Line total (after discounts)."
      total_tax:
        type: "string"
        description: "Line total tax (after discounts)."
      taxes:
        type: "array"
        items:
          $ref: "#/definitions/Tax"
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
      sku:
        type: "string"
        description: "Product SKU."
      price:
        type: "string"
        description: "Product price."
  TaxLine:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Item ID."
      rate_code:
        type: "string"
        description: "Rate code."
      rate_id:
        type: "string"
        description: "Rate ID."
      label:
        type: "string"
        description: "Tax label."
      compound:
        type: "boolean"
        description: "Show if is a compound tax rate."
      tax_total:
        type: "string"
        description: "Tax total (not including shipping taxes)."
      shipping_tax_total:
        type: "string"
        description: "Shipping tax total."
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
  ShippingLine:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Item ID."
      method_title:
        type: "string"
        description: "Shipping method name."
      method_id:
        type: "string"
        description: "Shipping method ID."
      total:
        type: "string"
        description: "Line total (after discounts)."
      total_tax:
        type: "string"
        description: "Line total tax (after discounts)."
      taxes:
        type: "array"
        items:
          $ref: "#/definitions/Tax"
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
  FeeLine:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Item ID."
      name:
        type: "string"
        description: "Fee name."
      tax_class:
        type: "string"
        description: "Tax class of fee."
      tax_status:
        type: "string"
        description: "Tax status of fee."
      total:
        type: "string"
        description: "Line total (after discounts)."
      total_tax:
        type: "string"
        description: "Line total tax (after discounts)."
      taxes:
        type: "array"
        items:
          $ref: "#/definitions/Tax"
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
  CouponLine:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Item ID."
      code:
        type: "string"
        description: "Coupon code."
      discount:
        type: "string"
        description: "Discount total."
      discount_tax:
        type: "string"
        description: "Discount tax total."
      meta_data:
        type: "array"
        items:
          $ref: "#/definitions/MetaData"
  Refund:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Refund ID."
      reason:
        type: "string"
        description: "Refund reason."
      total:
        type: "string"
        description: "Refund total."
  Tax:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Tax rate ID."
      total:
        type: "string"
        description: "Tax total."
      subtotal:
        type: "string"
        description: "Tax subtotal."
  MetaData:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "Meta ID."
      key:
        type: "string"
        description: "Meta key."
      value:
        type: "string"
        description: "Meta value."
  Report:
    type: "object"
    properties:
      slug:
        type: "string"
        description: "Report slug."
      description:
        type: "string"
        description: "Report description."
  SalesReport:
    type: "object"
    properties:
      total_sales:
        type: "string"
        description: "Gross sales in the period."
      net_sales:
        type: "string"
        description: "Net sales in the period."
      average_sales:
        type: "string"
        description: "Average sales in the period."
      total_orders:
        type: "integer"
        description: "Total of orders placed."
      total_items:
        type: "integer"
        description: "Total of items purchased."
      total_tax:
        type: "string"
        description: "Total charged for taxes."
      total_shipping:
        type: "string"
        description: "Total charged for shipping."
      total_refunds:
        type: "integer"
        description: "Total of refunded orders."
      total_discount:
        type: "string"
        description: "Total of coupons used."
      totals_grouped_by:
        type: "string"
        description: "Group type."
      totals:
        type: "array"
        items:
          $ref: "#/definitions/SalesReportTotal"
  SalesReportTotal:
    type: "object"
    properties:
      period:
        type: "string"
        description: "Period."
      orders:
        type: "integer"
        description: "Number of orders."
      products:
        type: "integer"
        description: "Number of products."
      coupons:
        type: "integer"
        description: "Number of coupons."
      coupons_amount:
        type: "string"
        description: "Amount of coupons."
      shipping:
        type: "string"
        description: "Amount of shipping."
      tax:
        type: "string"
        description: "Amount of tax."
      total_sales:
        type: "string"
        description: "Total sales."
      net_sales:
        type: "string"
        description: "Net sales."
      avg_order_value:
        type: "string"
        description: "Average order value."
      avg_items_per_order:
        type: "number"
        description: "Average items per order."
  ApiError:
    type: "object"
    properties:
      code:
        type: "string"
        description: "Error code"
      message:
        type: "string"
        description: "Error message"
      data:
        type: "object"
        description: "Additional error data"
