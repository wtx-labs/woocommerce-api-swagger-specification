# specVersion: 0.9.6
swagger: '2.0'
info:
  title: WooCommerce REST API
  description: The REST API is a powerful part of WooCommerce which lets you read and write various parts of WooCommerce data such as orders, products, coupons, customers, and shipping zones.
  version: v3
  contact:
    name: WTX Labs Team
    url: https://github.com/wtx-labs/woocommerce-api-swagger-specification
host: example-woocommerce-shop.com
basePath: /wp-json/wc/v3
schemes:
  - https 
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: [] 
tags:
  - name: Customers
  - name: Products
  - name: Product variations
  - name: Product categories
  - name: Orders
  - name: Reports 
paths:
  /customers:
    post:
      tags:
        - Customers
      summary: This API helps you to create a new customer.
      operationId: createCustomer
      parameters:
        - name: customer
          in: body
          description: Customer object with data to create.
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: Returns specified customer.
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    get:
      tags:
        - Customers
      summary: This API helps you to view all the customers.
      operationId: listAllCustomers
      parameters:
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: page
          in: query
          description: 'Current page of the collection. Default is 1.'
          type: integer
          default: 1
        - name: per_page
          in: query
          description: 'Maximum number of items to be returned in result set. Default is 10.'
          type: integer
          default: 10
        - name: search
          in: query
          description: 'Limit results to those matching a string.'
          type: string
        - name: exclude
          in: query
          description: 'Ensure result set excludes specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: include
          in: query
          description: 'Limit result set to specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: offset
          in: query
          description: 'Offset the result set by a specific number of items.'
          type: integer
        - name: order
          in: query
          description: 'Order sort attribute ascending or descending. Options: asc and desc. Default is asc.'
          type: string
          enum:
            - asc
            - desc
          default: asc
        - name: orderby
          in: query
          description: 'Sort collection by object attribute. Options: id, include, name and registered_date. Default is name.'
          type: string
          enum:
            - id
            - include
            - name
            - registered_date
          default: name
        - name: email
          in: query
          description: 'Limit result set to resources with a specific email.'
          type: string
        - name: role
          in: query
          description: 'Limit result set to resources with a specific role. Options: all, administrator, editor, author, contributor, subscriber, customer and shop_manager. Default is customer.'
          type: string
          enum:
            - all
            - administrator
            - editor
            - author
            - contributor
            - subscriber
            - customer
            - shop_manager
          default: customer
      responses:
        '200':
          description: Returns list of customers.
          schema:
            type: array
            items:
              $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /customers/{id}:
    get:
      tags:
        - Customers
      summary: This API helps you to view a specific customer.
      operationId: retrieveCustomer
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
      responses:
        '200':
          description: Returns specified customer.
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    put:
      tags:
        - Customers
      summary: This API helps you to update a specific customer.
      operationId: updateCustomer
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: customer
          in: body
          description: Customer object with data to update.
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: Returns updated customer.
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      tags:
        - Customers
      summary: This API helps you to delete a specific customer.
      operationId: deleteCustomer
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: force
          in: query
          description: 'Whether to bypass trash and force deletion. Default is false.'
          type: boolean
          default: false
      responses:
        '200':
          description: Returns deleted customer.
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /customers/batch:
    post:
      tags:
        - Customers
      summary: This API helps you to batch create, update and delete multiple customers.
      operationId: batchCustomers
      parameters:
        - name: customers
          in: body
          description: Customer objects to create, update or delete.
          required: true
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/Customer'
              update:
                type: array
                items:
                  $ref: '#/definitions/Customer'
              delete:
                type: array
                items:
                  type: integer
      responses:
        '200':
          description: Returns batch operation results.
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/Customer'
              update:
                type: array
                items:
                  $ref: '#/definitions/Customer'
              delete:
                type: array
                items:
                  $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products:
    post:
      tags:
        - Products
      summary: This API helps you to create a new product.
      operationId: createProduct
      parameters:
        - name: product
          in: body
          description: Product object with data to create.
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: Returns specified product.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    get:
      tags:
        - Products
      summary: This API helps you to view all the products.
      operationId: listAllProducts
      parameters:
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: page
          in: query
          description: 'Current page of the collection. Default is 1.'
          type: integer
          default: 1
        - name: per_page
          in: query
          description: 'Maximum number of items to be returned in result set. Default is 10.'
          type: integer
          default: 10
        - name: search
          in: query
          description: 'Limit results to those matching a string.'
          type: string
        - name: after
          in: query
          description: 'Limit response to resources published after a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: before
          in: query
          description: 'Limit response to resources published before a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: exclude
          in: query
          description: 'Ensure result set excludes specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: include
          in: query
          description: 'Limit result set to specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: offset
          in: query
          description: 'Offset the result set by a specific number of items.'
          type: integer
        - name: order
          in: query
          description: 'Order sort attribute ascending or descending. Options: asc and desc. Default is desc.'
          type: string
          enum:
            - asc
            - desc
          default: desc
        - name: orderby
          in: query
          description: 'Sort collection by object attribute. Options: date, id, include, title, slug and modified. Default is date.'
          type: string
          enum:
            - date
            - id
            - include
            - title
            - slug
            - modified
          default: date
        - name: parent
          in: query
          description: 'Limit result set to those of particular parent IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: parent_exclude
          in: query
          description: 'Limit result set to all items except those of a particular parent ID.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: slug
          in: query
          description: 'Limit result set to products with a specific slug.'
          type: string
        - name: status
          in: query
          description: 'Limit result set to products assigned a specific status. Options: any, draft, pending, private and publish. Default is any.'
          type: string
          enum:
            - any
            - draft
            - pending
            - private
            - publish
          default: any
        - name: type
          in: query
          description: 'Limit result set to products assigned a specific type. Options: simple, grouped, external and variable. Default is simple.'
          type: string
          enum:
            - simple
            - grouped
            - external
            - variable
          default: simple
        - name: sku
          in: query
          description: 'Limit result set to products with a specific SKU.'
          type: string
        - name: featured
          in: query
          description: 'Limit result set to featured products.'
          type: boolean
        - name: category
          in: query
          description: 'Limit result set to products assigned a specific category ID.'
          type: string
        - name: tag
          in: query
          description: 'Limit result set to products assigned a specific tag ID.'
          type: string
        - name: shipping_class
          in: query
          description: 'Limit result set to products assigned a specific shipping class ID.'
          type: string
        - name: attribute
          in: query
          description: 'Limit result set to products with a specific attribute.'
          type: string
        - name: attribute_term
          in: query
          description: 'Limit result set to products with a specific attribute term ID (required an assigned attribute).'
          type: string
        - name: tax_class
          in: query
          description: 'Limit result set to products with a specific tax class. Default options: standard, reduced-rate and zero-rate.'
          type: string
        - name: on_sale
          in: query
          description: 'Limit result set to products on sale.'
          type: boolean
        - name: min_price
          in: query
          description: 'Limit result set to products based on a minimum price.'
          type: string
        - name: max_price
          in: query
          description: 'Limit result set to products based on a maximum price.'
          type: string
        - name: stock_status
          in: query
          description: 'Limit result set to products with specified stock status. Options: instock, outofstock and onbackorder.'
          type: string
          enum:
            - instock
            - outofstock
            - onbackorder
      responses:
        '200':
          description: Returns list of products.
          schema:
            type: array
            items:
              $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/{id}:
    get:
      tags:
        - Products
      summary: This API helps you to view a specific product.
      operationId: retrieveProduct
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
      responses:
        '200':
          description: Returns specified product.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    put:
      tags:
        - Products
      summary: This API helps you to update a specific product.
      operationId: updateProduct
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: product
          in: body
          description: Product object with data to update.
          required: true
          schema:
            $ref: '#/definitions/Product'
      responses:
        '200':
          description: Returns updated product.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      tags:
        - Products
      summary: This API helps you to delete a specific product.
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: force
          in: query
          description: 'Whether to bypass trash and force deletion. Default is false.'
          type: boolean
          default: false
      responses:
        '200':
          description: Returns deleted product.
          schema:
            $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/batch:
    post:
      tags:
        - Products
      summary: This API helps you to batch create, update and delete multiple products.
      operationId: batchProducts
      parameters:
        - name: products
          in: body
          description: Product objects to create, update or delete.
          required: true
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/Product'
              update:
                type: array
                items:
                  $ref: '#/definitions/Product'
              delete:
                type: array
                items:
                  type: integer
      responses:
        '200':
          description: Returns batch operation results.
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/Product'
              update:
                type: array
                items:
                  $ref: '#/definitions/Product'
              delete:
                type: array
                items:
                  $ref: '#/definitions/Product'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/{id}/variations:
    post:
      tags:
        - Product variations
      summary: This API helps you to create a new product variation.
      operationId: createProductVariation
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: variation
          in: body
          description: Product variation object with data to create.
          required: true
          schema:
            $ref: '#/definitions/ProductVariation'
      responses:
        '200':
          description: Returns specified product variation.
          schema:
            $ref: '#/definitions/ProductVariation'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    get:
      tags:
        - Product variations
      summary: This API helps you to view all the product variations.
      operationId: listAllProductVariations
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: page
          in: query
          description: 'Current page of the collection. Default is 1.'
          type: integer
          default: 1
        - name: per_page
          in: query
          description: 'Maximum number of items to be returned in result set. Default is 10.'
          type: integer
          default: 10
        - name: search
          in: query
          description: 'Limit results to those matching a string.'
          type: string
        - name: after
          in: query
          description: 'Limit response to resources published after a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: before
          in: query
          description: 'Limit response to resources published before a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: exclude
          in: query
          description: 'Ensure result set excludes specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: include
          in: query
          description: 'Limit result set to specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: offset
          in: query
          description: 'Offset the result set by a specific number of items.'
          type: integer
        - name: order
          in: query
          description: 'Order sort attribute ascending or descending. Options: asc and desc. Default is desc.'
          type: string
          enum:
            - asc
            - desc
          default: desc
        - name: orderby
          in: query
          description: 'Sort collection by object attribute. Options: date, id, include, title, slug and modified. Default is date.'
          type: string
          enum:
            - date
            - id
            - include
            - title
            - slug
            - modified
          default: date
        - name: parent
          in: query
          description: 'Limit result set to those of particular parent IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: parent_exclude
          in: query
          description: 'Limit result set to all items except those of a particular parent ID.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: slug
          in: query
          description: 'Limit result set to products with a specific slug.'
          type: string
        - name: status
          in: query
          description: 'Limit result set to products assigned a specific status. Options: any, draft, pending, private and publish. Default is any.'
          type: string
          enum:
            - any
            - draft
            - pending
            - private
            - publish
          default: any
        - name: sku
          in: query
          description: 'Limit result set to products with a specific SKU.'
          type: string
        - name: featured
          in: query
          description: 'Limit result set to featured products.'
          type: boolean
        - name: category
          in: query
          description: 'Limit result set to products assigned a specific category ID.'
          type: string
        - name: tag
          in: query
          description: 'Limit result set to products assigned a specific tag ID.'
          type: string
        - name: shipping_class
          in: query
          description: 'Limit result set to products assigned a specific shipping class ID.'
          type: string
        - name: attribute
          in: query
          description: 'Limit result set to products with a specific attribute.'
          type: string
        - name: attribute_term
          in: query
          description: 'Limit result set to products with a specific attribute term ID (required an assigned attribute).'
          type: string
        - name: tax_class
          in: query
          description: 'Limit result set to products with a specific tax class. Default options: standard, reduced-rate and zero-rate.'
          type: string
        - name: on_sale
          in: query
          description: 'Limit result set to products on sale.'
          type: boolean
        - name: min_price
          in: query
          description: 'Limit result set to products based on a minimum price.'
          type: string
        - name: max_price
          in: query
          description: 'Limit result set to products based on a maximum price.'
          type: string
        - name: stock_status
          in: query
          description: 'Limit result set to products with specified stock status. Options: instock, outofstock and onbackorder.'
          type: string
          enum:
            - instock
            - outofstock
            - onbackorder
      responses:
        '200':
          description: Returns list of product variations.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductVariation'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/{id}/variations/{id}:
    get:
      tags:
        - Product variations
      summary: This API helps you to view a specific product variation.
      operationId: retrieveProductVariation
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
      responses:
        '200':
          description: Returns specified product variation.
          schema:
            $ref: '#/definitions/ProductVariation'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    put:
      tags:
        - Product variations
      summary: This API helps you to update a specific product variation.
      operationId: updateProductVariation
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: variation
          in: body
          description: Product variation object with data to update.
          required: true
          schema:
            $ref: '#/definitions/ProductVariation'
      responses:
        '200':
          description: Returns updated product variation.
          schema:
            $ref: '#/definitions/ProductVariation'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      tags:
        - Product variations
      summary: This API helps you to delete a specific product variation.
      operationId: deleteProductVariation
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: force
          in: query
          description: 'Whether to bypass trash and force deletion. Default is false.'
          type: boolean
          default: false
      responses:
        '200':
          description: Returns deleted product variation.
          schema:
            $ref: '#/definitions/ProductVariation'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/categories:
    post:
      tags:
        - Product categories
      summary: This API helps you to create a new product category.
      operationId: createProductCategory
      parameters:
        - name: category
          in: body
          description: Product category object with data to create.
          required: true
          schema:
            $ref: '#/definitions/ProductCategory'
      responses:
        '200':
          description: Returns specified product category.
          schema:
            $ref: '#/definitions/ProductCategory'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    get:
      tags:
        - Product categories
      summary: This API helps you to view all the product categories.
      operationId: listAllProductCategories
      parameters:
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: page
          in: query
          description: 'Current page of the collection. Default is 1.'
          type: integer
          default: 1
        - name: per_page
          in: query
          description: 'Maximum number of items to be returned in result set. Default is 10.'
          type: integer
          default: 10
        - name: search
          in: query
          description: 'Limit results to those matching a string.'
          type: string
        - name: exclude
          in: query
          description: 'Ensure result set excludes specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: include
          in: query
          description: 'Limit result set to specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: order
          in: query
          description: 'Order sort attribute ascending or descending. Options: asc and desc. Default is asc.'
          type: string
          enum:
            - asc
            - desc
          default: asc
        - name: orderby
          in: query
          description: 'Sort collection by object attribute. Options: id, include, name, slug and term_group. Default is name.'
          type: string
          enum:
            - id
            - include
            - name
            - slug
            - term_group
          default: name
        - name: hide_empty
          in: query
          description: 'Whether to hide resources not assigned to any products. Default is false.'
          type: boolean
          default: false
        - name: parent
          in: query
          description: 'Limit result set to resources assigned to a specific parent. Default is 0.'
          type: integer
          default: 0
        - name: product
          in: query
          description: 'Limit result set to resources assigned to a specific product.'
          type: integer
        - name: slug
          in: query
          description: 'Limit result set to resources with a specific slug.'
          type: string
      responses:
        '200':
          description: Returns list of product categories.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProductCategory'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/categories/{id}:
    get:
      tags:
        - Product categories
      summary: This API helps you to view a specific product category.
      operationId: retrieveProductCategory
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
      responses:
        '200':
          description: Returns specified product category.
          schema:
            $ref: '#/definitions/ProductCategory'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    put:
      tags:
        - Product categories
      summary: This API helps you to update a specific product category.
      operationId: updateProductCategory
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: category
          in: body
          description: Product category object with data to update.
          required: true
          schema:
            $ref: '#/definitions/ProductCategory'
      responses:
        '200':
          description: Returns updated product category.
          schema:
            $ref: '#/definitions/ProductCategory'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      tags:
        - Product categories
      summary: This API helps you to delete a specific product category.
      operationId: deleteProductCategory
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: force
          in: query
          description: 'Whether to bypass trash and force deletion. Default is false.'
          type: boolean
          default: false
      responses:
        '200':
          description: Returns deleted product category.
          schema:
            $ref: '#/definitions/ProductCategory'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /products/categories/batch:
    post:
      tags:
        - Product categories
      summary: This API helps you to batch create, update and delete multiple product categories.
      operationId: batchProductCategories
      parameters:
        - name: categories
          in: body
          description: Product category objects to create, update or delete.
          required: true
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/ProductCategory'
              update:
                type: array
                items:
                  $ref: '#/definitions/ProductCategory'
              delete:
                type: array
                items:
                  type: integer
      responses:
        '200':
          description: Returns batch operation results.
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/ProductCategory'
              update:
                type: array
                items:
                  $ref: '#/definitions/ProductCategory'
              delete:
                type: array
                items:
                  $ref: '#/definitions/ProductCategory'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /orders:
    post:
      tags:
        - Orders
      summary: This API helps you to create a new order.
      operationId: createOrder
      parameters:
        - name: order
          in: body
          description: Order object with data to create.
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: Returns specified order.
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    get:
      tags:
        - Orders
      summary: This API helps you to view all the orders.
      operationId: listAllOrders
      parameters:
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: page
          in: query
          description: 'Current page of the collection. Default is 1.'
          type: integer
          default: 1
        - name: per_page
          in: query
          description: 'Maximum number of items to be returned in result set. Default is 10.'
          type: integer
          default: 10
        - name: search
          in: query
          description: 'Limit results to those matching a string.'
          type: string
        - name: after
          in: query
          description: 'Limit response to resources published after a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: before
          in: query
          description: 'Limit response to resources published before a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: exclude
          in: query
          description: 'Ensure result set excludes specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: include
          in: query
          description: 'Limit result set to specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: offset
          in: query
          description: 'Offset the result set by a specific number of items.'
          type: integer
        - name: order
          in: query
          description: 'Order sort attribute ascending or descending. Options: asc and desc. Default is desc.'
          type: string
          enum:
            - asc
            - desc
          default: desc
        - name: orderby
          in: query
          description: 'Sort collection by object attribute. Options: date, id, include, title and modified. Default is date.'
          type: string
          enum:
            - date
            - id
            - include
            - title
            - modified
          default: date
        - name: parent
          in: query
          description: 'Limit result set to those of particular parent IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: parent_exclude
          in: query
          description: 'Limit result set to all items except those of a particular parent ID.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: status
          in: query
          description: 'Limit result set to orders assigned a specific status. Options: any, pending, processing, on-hold, completed, cancelled, refunded, failed and trash. Default is any.'
          type: string
          enum:
            - any
            - pending
            - processing
            - on-hold
            - completed
            - cancelled
            - refunded
            - failed
            - trash
          default: any
        - name: customer
          in: query
          description: 'Limit result set to orders assigned a specific customer.'
          type: integer
        - name: product
          in: query
          description: 'Limit result set to orders assigned a specific product.'
          type: integer
        - name: dp
          in: query
          description: 'Number of decimal points to use in each resource. Default is 2.'
          type: integer
          default: 2
      responses:
        '200':
          description: Returns list of orders.
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /orders/{id}:
    get:
      tags:
        - Orders
      summary: This API helps you to view a specific order.
      operationId: retrieveOrder
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: dp
          in: query
          description: 'Number of decimal points to use in each resource. Default is 2.'
          type: integer
          default: 2
      responses:
        '200':
          description: Returns specified order.
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    put:
      tags:
        - Orders
      summary: This API helps you to update a specific order.
      operationId: updateOrder
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: order
          in: body
          description: Order object with data to update.
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: Returns updated order.
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
    delete:
      tags:
        - Orders
      summary: This API helps you to delete a specific order.
      operationId: deleteOrder
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: force
          in: query
          description: 'Whether to bypass trash and force deletion. Default is false.'
          type: boolean
          default: false
      responses:
        '200':
          description: Returns deleted order.
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /orders/batch:
    post:
      tags:
        - Orders
      summary: This API helps you to batch create, update and delete multiple orders.
      operationId: batchOrders
      parameters:
        - name: orders
          in: body
          description: Order objects to create, update or delete.
          required: true
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/Order'
              update:
                type: array
                items:
                  $ref: '#/definitions/Order'
              delete:
                type: array
                items:
                  type: integer
      responses:
        '200':
          description: Returns batch operation results.
          schema:
            type: object
            properties:
              create:
                type: array
                items:
                  $ref: '#/definitions/Order'
              update:
                type: array
                items:
                  $ref: '#/definitions/Order'
              delete:
                type: array
                items:
                  $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /reports:
    get:
      tags:
        - Reports
      summary: This API helps you to view all the reports.
      operationId: listAllReports
      parameters:
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
        - name: page
          in: query
          description: 'Current page of the collection. Default is 1.'
          type: integer
          default: 1
        - name: per_page
          in: query
          description: 'Maximum number of items to be returned in result set. Default is 10.'
          type: integer
          default: 10
        - name: search
          in: query
          description: 'Limit results to those matching a string.'
          type: string
        - name: exclude
          in: query
          description: 'Ensure result set excludes specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: include
          in: query
          description: 'Limit result set to specific IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: offset
          in: query
          description: 'Offset the result set by a specific number of items.'
          type: integer
        - name: order
          in: query
          description: 'Order sort attribute ascending or descending. Options: asc and desc. Default is desc.'
          type: string
          enum:
            - asc
            - desc
          default: desc
        - name: orderby
          in: query
          description: 'Sort collection by object attribute. Options: date, id, include, title and modified. Default is date.'
          type: string
          enum:
            - date
            - id
            - include
            - title
            - modified
          default: date
        - name: parent
          in: query
          description: 'Limit result set to those of particular parent IDs.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: parent_exclude
          in: query
          description: 'Limit result set to all items except those of a particular parent ID.'
          type: array
          items:
            type: integer
          collectionFormat: csv
        - name: slug
          in: query
          description: 'Limit result set to resources with a specific slug.'
          type: string
        - name: status
          in: query
          description: 'Limit result set to resources assigned a specific status. Options: any, draft, pending, private and publish. Default is any.'
          type: string
          enum:
            - any
            - draft
            - pending
            - private
            - publish
          default: any
        - name: type
          in: query
          description: 'Limit result set to resources assigned a specific type. Options: sales, taxes, products, coupons, customers and stock. Default is sales.'
          type: string
          enum:
            - sales
            - taxes
            - products
            - coupons
            - customers
            - stock
          default: sales
        - name: date_min
          in: query
          description: 'Limit response to resources published after a given ISO8601 compliant date.'
          type: string
          format: date-time
        - name: date_max
          in: query
          description: 'Limit response to resources published before a given ISO8601 compliant date.'
          type: string
          format: date-time
      responses:
        '200':
          description: Returns list of reports.
          schema:
            type: array
            items:
              $ref: '#/definitions/Report'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError'
  /reports/{id}:
    get:
      tags:
        - Reports
      summary: This API helps you to view a specific report.
      operationId: retrieveReport
      parameters:
        - name: id
          in: path
          description: Unique identifier for the resource.
          required: true
          type: integer
        - name: context
          in: query
          description: 'Scope under which the request is made; determines fields present in response. Options: view and edit. Default is view.'
          type: string
          enum:
            - view
            - edit
          default: view
      responses:
        '200':
          description: Returns specified report.
          schema:
            $ref: '#/definitions/Report'
        '401':
          description: Unauthorized
          schema:
            $ref: '#/definitions/ApiError'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ApiError' 
definitions:
  Customer:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the resource.
      date_created:
        type: string
        format: date-time
        description: The date the customer was created, in the site's timezone.
      date_created_gmt:
        type: string
        format: date-time
        description: The date the customer was created, as GMT.
      date_modified:
        type: string
        format: date-time
        description: The date the customer was last modified, in the site's timezone.
      date_modified_gmt:
        type: string
        format: date-time
        description: The date the customer was last modified, as GMT.
      email:
        type: string
        description: The email address for the customer.
      first_name:
        type: string
        description: Customer first name.
      last_name:
        type: string
        description: Customer last name.
      role:
        type: string
        description: Customer role.
      username:
        type: string
        description: Customer login name.
      billing:
        $ref: '#/definitions/Billing'
      shipping:
        $ref: '#/definitions/Shipping'
      is_paying_customer:
        type: boolean
        description: Is the customer a paying customer?
      avatar_url:
        type: string
        description: Avatar URL.
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  Billing:
    type: object
    properties:
      first_name:
        type: string
        description: First name.
      last_name:
        type: string
        description: Last name.
      company:
        type: string
        description: Company name.
      address_1:
        type: string
        description: Address line 1.
      address_2:
        type: string
        description: Address line 2.
      city:
        type: string
        description: City name.
      state:
        type: string
        description: ISO code or name of the state, province or district.
      postcode:
        type: string
        description: Postal code.
      country:
        type: string
        description: ISO code of the country.
      email:
        type: string
        description: Email address.
      phone:
        type: string
        description: Phone number.
  Shipping:
    type: object
    properties:
      first_name:
        type: string
        description: First name.
      last_name:
        type: string
        description: Last name.
      company:
        type: string
        description: Company name.
      address_1:
        type: string
        description: Address line 1.
      address_2:
        type: string
        description: Address line 2.
      city:
        type: string
        description: City name.
      state:
        type: string
        description: ISO code or name of the state, province or district.
      postcode:
        type: string
        description: Postal code.
      country:
        type: string
        description: ISO code of the country.
  MetaData:
    type: object
    properties:
      id:
        type: integer
        description: Meta ID.
      key:
        type: string
        description: Meta key.
      value:
        type: string
        description: Meta value.
  Product:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the resource.
      name:
        type: string
        description: Product name.
      slug:
        type: string
        description: Product slug.
      permalink:
        type: string
        description: Product permalink.
      date_created:
        type: string
        format: date-time
        description: The date the product was created, in the site's timezone.
      date_created_gmt:
        type: string
        format: date-time
        description: The date the product was created, as GMT.
      date_modified:
        type: string
        format: date-time
        description: The date the product was last modified, in the site's timezone.
      date_modified_gmt:
        type: string
        format: date-time
        description: The date the product was last modified, as GMT.
      type:
        type: string
        description: Product type.
      status:
        type: string
        description: Product status (post status).
      featured:
        type: boolean
        description: Featured product.
      catalog_visibility:
        type: string
        description: Catalog visibility.
      description:
        type: string
        description: Product description.
      short_description:
        type: string
        description: Product short description.
      sku:
        type: string
        description: Unique identifier.
      price:
        type: string
        description: Current product price.
      regular_price:
        type: string
        description: Product regular price.
      sale_price:
        type: string
        description: Product sale price.
      date_on_sale_from:
        type: string
        format: date-time
        description: Start date of sale price, in the site's timezone.
      date_on_sale_from_gmt:
        type: string
        format: date-time
        description: Start date of sale price, as GMT.
      date_on_sale_to:
        type: string
        format: date-time
        description: End date of sale price, in the site's timezone.
      date_on_sale_to_gmt:
        type: string
        format: date-time
        description: End date of sale price, as GMT.
      on_sale:
        type: boolean
        description: Shows if the product is on sale.
      purchasable:
        type: boolean
        description: Shows if the product can be bought.
      total_sales:
        type: integer
        description: Amount of sales.
      virtual:
        type: boolean
        description: If the product is virtual.
      downloadable:
        type: boolean
        description: If the product is downloadable.
      downloads:
        type: array
        description: List of downloadable files.
        items:
          $ref: '#/definitions/ProductDownload'
      download_limit:
        type: integer
        description: Number of times downloadable files can be downloaded after purchase.
      download_expiry:
        type: integer
        description: Number of days until access to downloadable files expires.
      tax_status:
        type: string
        description: Tax status.
      tax_class:
        type: string
        description: Tax class.
      manage_stock:
        type: boolean
        description: Stock management at product level.
      stock_quantity:
        type: integer
        description: Stock quantity.
      stock_status:
        type: string
        description: Controls the stock status of the product.
      backorders:
        type: string
        description: If managing stock, this controls if backorders are allowed.
      backorders_allowed:
        type: boolean
        description: Shows if backorders are allowed.
      backordered:
        type: boolean
        description: Shows if the product is on backordered.
      sold_individually:
        type: boolean
        description: Allow one item to be bought in a single order.
      weight:
        type: string
        description: Product weight (kg).
      dimensions:
        $ref: '#/definitions/ProductDimension'
      shipping_required:
        type: boolean
        description: Shows if the product need to be shipped.
      shipping_taxable:
        type: boolean
        description: Shows whether or not the product shipping is taxable.
      shipping_class:
        type: string
        description: Shipping class slug.
      shipping_class_id:
        type: integer
        description: Shipping class ID.
      reviews_allowed:
        type: boolean
        description: Allow reviews.
      average_rating:
        type: string
        description: Reviews average rating.
      rating_count:
        type: integer
        description: Amount of reviews that the product has.
      related_ids:
        type: array
        description: List of related products IDs.
        items:
          type: integer
      upsell_ids:
        type: array
        description: List of up-sell products IDs.
        items:
          type: integer
      cross_sell_ids:
        type: array
        description: List of cross-sell products IDs.
        items:
          type: integer
      parent_id:
        type: integer
        description: Product parent ID.
      purchase_note:
        type: string
        description: Optional note to send the customer after purchase.
      categories:
        type: array
        description: List of categories.
        items:
          $ref: '#/definitions/ProductCategory'
      tags:
        type: array
        description: List of tags.
        items:
          $ref: '#/definitions/ProductTag'
      images:
        type: array
        description: List of images.
        items:
          $ref: '#/definitions/ProductImage'
      attributes:
        type: array
        description: List of attributes.
        items:
          $ref: '#/definitions/ProductAttribute'
      default_attributes:
        type: array
        description: Defaults variation attributes.
        items:
          $ref: '#/definitions/ProductDefaultAttribute'
      variations:
        type: array
        description: List of variations IDs.
        items:
          type: integer
      grouped_products:
        type: array
        description: List of grouped products ID.
        items:
          type: integer
      menu_order:
        type: integer
        description: Menu order, used to custom sort products.
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  ProductDownload:
    type: object
    properties:
      id:
        type: string
        description: File ID.
      name:
        type: string
        description: File name.
      file:
        type: string
        description: File URL.
  ProductDimension:
    type: object
    properties:
      length:
        type: string
        description: Product length (cm).
      width:
        type: string
        description: Product width (cm).
      height:
        type: string
        description: Product height (cm).
  ProductCategory:
    type: object
    properties:
      id:
        type: integer
        description: Category ID.
      name:
        type: string
        description: Category name.
      slug:
        type: string
        description: Category slug.
  ProductTag:
    type: object
    properties:
      id:
        type: integer
        description: Tag ID.
      name:
        type: string
        description: Tag name.
      slug:
        type: string
        description: Tag slug.
  ProductImage:
    type: object
    properties:
      id:
        type: integer
        description: Image ID.
      date_created:
        type: string
        format: date-time
        description: The date the image was created, in the site's timezone.
      date_created_gmt:
        type: string
        format: date-time
        description: The date the image was created, as GMT.
      date_modified:
        type: string
        format: date-time
        description: The date the image was last modified, in the site's timezone.
      date_modified_gmt:
        type: string
        format: date-time
        description: The date the image was last modified, as GMT.
      src:
        type: string
        description: Image URL.
      name:
        type: string
        description: Image name.
      alt:
        type: string
        description: Image alternative text.
  ProductAttribute:
    type: object
    properties:
      id:
        type: integer
        description: Attribute ID.
      name:
        type: string
        description: Attribute name.
      position:
        type: integer
        description: Attribute position.
      visible:
        type: boolean
        description: Define if the attribute is visible on the "Additional information" tab in the product's page.
      variation:
        type: boolean
        description: Define if the attribute can be used as variation.
      options:
        type: array
        description: List of available term names of the attribute.
        items:
          type: string
  ProductDefaultAttribute:
    type: object
    properties:
      id:
        type: integer
        description: Attribute ID.
      name:
        type: string
        description: Attribute name.
      option:
        type: string
        description: Selected attribute term name.
  ProductVariation:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the resource.
      date_created:
        type: string
        format: date-time
        description: The date the variation was created, in the site's timezone.
      date_created_gmt:
        type: string
        format: date-time
        description: The date the variation was created, as GMT.
      date_modified:
        type: string
        format: date-time
        description: The date the variation was last modified, in the site's timezone.
      date_modified_gmt:
        type: string
        format: date-time
        description: The date the variation was last modified, as GMT.
      description:
        type: string
        description: Variation description.
      permalink:
        type: string
        description: Variation permalink.
      sku:
        type: string
        description: Unique identifier.
      price:
        type: string
        description: Current variation price.
      regular_price:
        type: string
        description: Variation regular price.
      sale_price:
        type: string
        description: Variation sale price.
      date_on_sale_from:
        type: string
        format: date-time
        description: Start date of sale price, in the site's timezone.
      date_on_sale_from_gmt:
        type: string
        format: date-time
        description: Start date of sale price, as GMT.
      date_on_sale_to:
        type: string
        format: date-time
        description: End date of sale price, in the site's timezone.
      date_on_sale_to_gmt:
        type: string
        format: date-time
        description: End date of sale price, as GMT.
      on_sale:
        type: boolean
        description: Shows if the variation is on sale.
      status:
        type: string
        description: Variation status.
      purchasable:
        type: boolean
        description: Shows if the variation can be bought.
      virtual:
        type: boolean
        description: If the variation is virtual.
      downloadable:
        type: boolean
        description: If the variation is downloadable.
      downloads:
        type: array
        description: List of downloadable files.
        items:
          $ref: '#/definitions/ProductDownload'
      download_limit:
        type: integer
        description: Number of times downloadable files can be downloaded after purchase.
      download_expiry:
        type: integer
        description: Number of days until access to downloadable files expires.
      tax_status:
        type: string
        description: Tax status.
      tax_class:
        type: string
        description: Tax class.
      manage_stock:
        type: boolean
        description: Stock management at variation level.
      stock_quantity:
        type: integer
        description: Stock quantity.
      stock_status:
        type: string
        description: Controls the stock status of the product.
      backorders:
        type: string
        description: If managing stock, this controls if backorders are allowed.
      backorders_allowed:
        type: boolean
        description: Shows if backorders are allowed.
      backordered:
        type: boolean
        description: Shows if the variation is on backordered.
      weight:
        type: string
        description: Variation weight (kg).
      dimensions:
        $ref: '#/definitions/ProductDimension'
      shipping_class:
        type: string
        description: Shipping class slug.
      shipping_class_id:
        type: integer
        description: Shipping class ID.
      image:
        $ref: '#/definitions/ProductImage'
      attributes:
        type: array
        description: List of variation attributes.
        items:
          $ref: '#/definitions/ProductVariationAttribute'
      menu_order:
        type: integer
        description: Menu order, used to custom sort products.
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  ProductVariationAttribute:
    type: object
    properties:
      id:
        type: integer
        description: Attribute ID.
      name:
        type: string
        description: Attribute name.
      option:
        type: string
        description: Selected attribute term name.
  Order:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the resource.
      parent_id:
        type: integer
        description: Parent order ID.
      number:
        type: string
        description: Order number.
      order_key:
        type: string
        description: Order key.
      created_via:
        type: string
        description: Shows where the order was created.
      version:
        type: string
        description: Version of WooCommerce which last updated the order.
      status:
        type: string
        description: Order status.
      currency:
        type: string
        description: Currency the order was created with, in ISO format.
      date_created:
        type: string
        format: date-time
        description: The date the order was created, in the site's timezone.
      date_created_gmt:
        type: string
        format: date-time
        description: The date the order was created, as GMT.
      date_modified:
        type: string
        format: date-time
        description: The date the order was last modified, in the site's timezone.
      date_modified_gmt:
        type: string
        format: date-time
        description: The date the order was last modified, as GMT.
      discount_total:
        type: string
        description: Total discount amount for the order.
      discount_tax:
        type: string
        description: Total discount tax amount for the order.
      shipping_total:
        type: string
        description: Total shipping amount for the order.
      shipping_tax:
        type: string
        description: Total shipping tax amount for the order.
      cart_tax:
        type: string
        description: Sum of line item taxes only.
      total:
        type: string
        description: Grand total.
      total_tax:
        type: string
        description: Sum of all taxes.
      prices_include_tax:
        type: boolean
        description: True the prices included tax during checkout.
      customer_id:
        type: integer
        description: User ID who owns the order. 0 for guests.
      customer_ip_address:
        type: string
        description: Customer's IP address.
      customer_user_agent:
        type: string
        description: User agent of the customer.
      customer_note:
        type: string
        description: Note left by customer during checkout.
      billing:
        $ref: '#/definitions/OrderBilling'
      shipping:
        $ref: '#/definitions/OrderShipping'
      payment_method:
        type: string
        description: Payment method ID.
      payment_method_title:
        type: string
        description: Payment method title.
      transaction_id:
        type: string
        description: Unique transaction ID.
      date_paid:
        type: string
        format: date-time
        description: The date the order was paid, in the site's timezone.
      date_paid_gmt:
        type: string
        format: date-time
        description: The date the order was paid, as GMT.
      date_completed:
        type: string
        format: date-time
        description: The date the order was completed, in the site's timezone.
      date_completed_gmt:
        type: string
        format: date-time
        description: The date the order was completed, as GMT.
      cart_hash:
        type: string
        description: MD5 hash of cart items to ensure orders are not modified.
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
      line_items:
        type: array
        description: Line items data.
        items:
          $ref: '#/definitions/OrderLineItem'
      tax_lines:
        type: array
        description: Tax lines data.
        items:
          $ref: '#/definitions/OrderTaxLine'
      shipping_lines:
        type: array
        description: Shipping lines data.
        items:
          $ref: '#/definitions/OrderShippingLine'
      fee_lines:
        type: array
        description: Fee lines data.
        items:
          $ref: '#/definitions/OrderFeeLine'
      coupon_lines:
        type: array
        description: Coupons line data.
        items:
          $ref: '#/definitions/OrderCouponLine'
      refunds:
        type: array
        description: List of refunds.
        items:
          $ref: '#/definitions/OrderRefund'
  OrderBilling:
    type: object
    properties:
      first_name:
        type: string
        description: First name.
      last_name:
        type: string
        description: Last name.
      company:
        type: string
        description: Company name.
      address_1:
        type: string
        description: Address line 1.
      address_2:
        type: string
        description: Address line 2.
      city:
        type: string
        description: City name.
      state:
        type: string
        description: ISO code or name of the state, province or district.
      postcode:
        type: string
        description: Postal code.
      country:
        type: string
        description: ISO code of the country.
      email:
        type: string
        description: Email address.
      phone:
        type: string
        description: Phone number.
  OrderShipping:
    type: object
    properties:
      first_name:
        type: string
        description: First name.
      last_name:
        type: string
        description: Last name.
      company:
        type: string
        description: Company name.
      address_1:
        type: string
        description: Address line 1.
      address_2:
        type: string
        description: Address line 2.
      city:
        type: string
        description: City name.
      state:
        type: string
        description: ISO code or name of the state, province or district.
      postcode:
        type: string
        description: Postal code.
      country:
        type: string
        description: ISO code of the country.
      phone:
        type: string
        description: Phone number.
  OrderLineItem:
    type: object
    properties:
      id:
        type: integer
        description: Item ID.
      name:
        type: string
        description: Product name.
      product_id:
        type: integer
        description: Product ID.
      variation_id:
        type: integer
        description: Variation ID, if applicable.
      quantity:
        type: integer
        description: Quantity ordered.
      tax_class:
        type: string
        description: Tax class of line item.
      subtotal:
        type: string
        description: Line subtotal (before discounts).
      subtotal_tax:
        type: string
        description: Line subtotal tax (before discounts).
      total:
        type: string
        description: Line total (after discounts).
      total_tax:
        type: string
        description: Line total tax (after discounts).
      taxes:
        type: array
        description: Line taxes.
        items:
          $ref: '#/definitions/OrderLineItemTax'
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
      sku:
        type: string
        description: Product SKU.
      price:
        type: number
        description: Product price.
  OrderLineItemTax:
    type: object
    properties:
      id:
        type: integer
        description: Tax rate ID.
      total:
        type: string
        description: Tax total.
      subtotal:
        type: string
        description: Tax subtotal.
  OrderTaxLine:
    type: object
    properties:
      id:
        type: integer
        description: Tax rate ID.
      rate_code:
        type: string
        description: Tax rate code.
      rate_id:
        type: string
        description: Tax rate ID.
      label:
        type: string
        description: Tax rate label.
      compound:
        type: boolean
        description: Show if is a compound tax rate.
      tax_total:
        type: string
        description: Tax total (not including shipping taxes).
      shipping_tax_total:
        type: string
        description: Shipping tax total.
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  OrderShippingLine:
    type: object
    properties:
      id:
        type: integer
        description: Item ID.
      method_title:
        type: string
        description: Shipping method title.
      method_id:
        type: string
        description: Shipping method ID.
      total:
        type: string
        description: Line total (after discounts).
      total_tax:
        type: string
        description: Line total tax (after discounts).
      taxes:
        type: array
        description: Line taxes.
        items:
          $ref: '#/definitions/OrderShippingLineTax'
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  OrderShippingLineTax:
    type: object
    properties:
      id:
        type: integer
        description: Tax rate ID.
      total:
        type: string
        description: Tax total.
      subtotal:
        type: string
        description: Tax subtotal.
  OrderFeeLine:
    type: object
    properties:
      id:
        type: integer
        description: Item ID.
      name:
        type: string
        description: Fee name.
      tax_class:
        type: string
        description: Tax class of fee.
      tax_status:
        type: string
        description: Tax status of fee.
      amount:
        type: string
        description: Line total (after discounts).
      total:
        type: string
        description: Line total (after discounts).
      total_tax:
        type: string
        description: Line total tax (after discounts).
      taxes:
        type: array
        description: Line taxes.
        items:
          $ref: '#/definitions/OrderFeeLineTax'
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  OrderFeeLineTax:
    type: object
    properties:
      id:
        type: integer
        description: Tax rate ID.
      total:
        type: string
        description: Tax total.
      subtotal:
        type: string
        description: Tax subtotal.
  OrderCouponLine:
    type: object
    properties:
      id:
        type: integer
        description: Item ID.
      code:
        type: string
        description: Coupon code.
      discount:
        type: string
        description: Discount total.
      discount_tax:
        type: string
        description: Discount tax total.
      meta_data:
        type: array
        description: Meta data.
        items:
          $ref: '#/definitions/MetaData'
  OrderRefund:
    type: object
    properties:
      id:
        type: integer
        description: Refund ID.
      reason:
        type: string
        description: Refund reason.
      total:
        type: string
        description: Refund total.
  Report:
    type: object
    properties:
      slug:
        type: string
        description: An alphanumeric identifier for the resource.
      description:
        type: string
        description: A human-readable description of the resource.
      _links:
        type: object
        description: Links to related resources.
        properties:
          self:
            type: array
            description: Self link.
            items:
              $ref: '#/definitions/Link'
          collection:
            type: array
            description: Collection link.
            items:
              $ref: '#/definitions/Link'
  Link:
    type: object
    properties:
      href:
        type: string
        description: URL of the link.
  ApiError:
    type: object
    properties:
      code:
        type: string
        description: Error code.
      message:
        type: string
        description: Error message.
      data:
        type: object
        description: Error data. 